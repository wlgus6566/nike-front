package com.nike.dnp.controller.open;

import com.nike.dnp.common.mail.MailService;
import com.nike.dnp.service.ResponseService;
import io.swagger.annotations.Api;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * The Class Login controller.
 *
 * @author [오지훈]
 * @since 2020. 6. 22. 오후 4:41:44
 * @apiNote
 */
@Slf4j
@RestController
@Api(description = "이메일 관련", tags = "EMAIL")
@RequestMapping(value = "/api/open/email", name = "이메일 관련")
@RequiredArgsConstructor
public class OpenTestController {

    private final ResponseService responseService;
    private final MailService mailService;

    //TODO[ojh] 2020/09/01 : 계정생성 메일 발송 후 삭제 예정
    /*@ApiOperation(value = "계정생성 이메일 발송")
    @GetMapping(name = "계정생성 이메일 발송", value = "/start")
    public SingleResult<Boolean> sendEmail1 () {
        log.info("OpenTestController.sendEmail1");

        String[] emails = {
                "jisub.sin@dae-yeon.co.kr",
                "yeonsoo.choi@dae-yeon.co.kr",
                "jaeman.park@dae-yeon.co.kr",
                "joonmin.kim@dae-yeon.co.kr",
                "minjeong.seo@dae-yeon.co.kr"

        };

        String[] names = {
                "DAEYEON NCX 4",
                "DAEYEON NCX 3",
                "DAEYEON NCX 2",
                "DAEYEON NCX 1",
                "DAEYEON VMS 1"
        };

        for (int i=0; i<emails.length; i++) {
            final SendDTO sendDTO = new SendDTO();
            sendDTO.setNickname(names[i]);
            sendDTO.setEmail(emails[i]);
            sendDTO.setLoginUrl("https://www.nikespace.co.kr/login");
            mailService.sendMail(
                    ServiceCode.EmailTypeEnumCode.USER_CREATE.toString()
                    , ServiceCode.EmailTypeEnumCode.USER_CREATE.getMessage()
                    , sendDTO
            );
        }
        return responseService.getSingleResult(true);
    }*/



}
