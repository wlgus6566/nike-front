package com.nike.dnp.controller.open;

import com.nike.dnp.common.mail.MailService;
import com.nike.dnp.common.variable.ServiceCode;
import com.nike.dnp.dto.email.SendDTO;
import com.nike.dnp.model.response.SingleResult;
import com.nike.dnp.service.ResponseService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * The Class Login controller.
 *
 * @author [오지훈]
 * @since 2020. 6. 22. 오후 4:41:44
 * @apiNote
 */
@Slf4j
@RestController
@Api(description = "이메일 관련", tags = "EMAIL")
@RequestMapping(value = "/api/open/email", name = "이메일 관련")
@RequiredArgsConstructor
public class OpenTestController {

    private final ResponseService responseService;
    private final MailService mailService;

    //TODO[ojh] 2020/09/01 : 계정생성 메일 발송 후 삭제 예정
    @ApiOperation(value = "계정생성 이메일 발송")
    @GetMapping(name = "계정생성 이메일 발송", value = "/send")
    public SingleResult<Boolean> send () {
        log.info("OpenTestController.send");

        String[] emails = {
                "JungRae.Kim@nike.com"
                ,"JiYoung.Park@nike.com"
                ,"SeungWook.Kim@nike.com"
                ,"JunKyong.Park@nike.com"
                ,"Yusun.Jin@nike.com"
                ,"SeungKuk.Kim@nike.com"
                ,"UiJong.Lee@nike.com"
                ,"Poorunsol.Lee@nike.com"
                ,"YoungJin.Kim@nike.com"
                ,"JiSu.Lee@nike.com"
                ,"Dokyong.Lee@nike.com"
                ,"DongWan.Kim@nike.com"
                ,"SooYeol.Lee@nike.com"
                ,"ChulJin.Lee@nike.com"
                ,"YoungRog.Jeong@nike.com"
                ,"SuMi.Yoon@nike.com"
                ,"HyunHee.Jang@nike.com"
                ,"Minjin.Jung@nike.com"
                ,"Yoosuk.Jung@nike.com"
                ,"Jamie.Kim@nike.com"
                ,"JungWon.Bae@nike.com"
                ,"WookJin.Chung@nike.com"
                ,"JinHyung.Gong@nike.com"
                ,"Alan.Han@nike.com"
                ,"Andy.Houghton@nike.com"
                ,"SuA.Jang@nike.com"
                ,"SangTae.Kim@nike.com"
                ,"TH.Kim@nike.com"
                ,"EunYoung.Lee@nike.com"
                ,"JamesJH.Lee@nike.com"
                ,"YeoJin.Yoon@nike.com"
        };

        String[] names = {
                "NIKE NDS 4"
                ,"NIKE PARTNER MGNT 1"
                ,"NIKE PARTNER MGNT 2"
                ,"NIKE PARTNER MGNT 3"
                ,"NIKE PARTNER MGNT 4"
                ,"NIKE PARTNER MGNT 5"
                ,"NIKE PARTNER MGNT 6"
                ,"NIKE PARTNER MGNT 7"
                ,"NIKE PARTNER MGNT 8"
                ,"NIKE PARTNER MGNT 9"
                ,"NIKE PARTNER MGNT 10"
                ,"NIKE PARTNER MGNT 11"
                ,"NIKE PARTNER MGNT 12"
                ,"NIKE PARTNER MGNT 13"
                ,"NIKE SALES MGMT 1"
                ,"NIKE SALES MGMT 2"
                ,"NIKE SALES MGMT 6"
                ,"NIKE SALES MGMT 10"
                ,"NIKE SALES MGMT 11"
                ,"NIKE KLT 1"
                ,"NIKE KLT 2"
                ,"NIKE KLT 3"
                ,"NIKE KLT 4"
                ,"NIKE KLT 5"
                ,"NIKE KLT 6"
                ,"NIKE KLT 7"
                ,"NIKE KLT 8"
                ,"NIKE KLT 9"
                ,"NIKE KLT 10"
                ,"NIKE KLT 11"
                ,"NIKE KLT 12"
        };

        for (int i=0; i<emails.length; i++) {
            final SendDTO sendDTO = new SendDTO();
            sendDTO.setNickname(names[i]);
            sendDTO.setEmail(emails[i]);
            sendDTO.setLoginUrl("https://www.nikespace.co.kr/login");
            mailService.sendMail(
                    ServiceCode.EmailTypeEnumCode.USER_CREATE.toString()
                    , ServiceCode.EmailTypeEnumCode.USER_CREATE.getMessage()
                    , sendDTO
            );
        }
        return responseService.getSingleResult(true);
    }


}
