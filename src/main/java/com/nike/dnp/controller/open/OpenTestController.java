package com.nike.dnp.controller.open;

import com.nike.dnp.common.mail.MailService;
import com.nike.dnp.common.variable.ServiceCode;
import com.nike.dnp.dto.email.SendDTO;
import com.nike.dnp.model.response.SingleResult;
import com.nike.dnp.service.ResponseService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * The Class Login controller.
 *
 * @author [오지훈]
 * @since 2020. 6. 22. 오후 4:41:44
 * @apiNote
 */
@Slf4j
@RestController
@Api(description = "이메일 관련", tags = "EMAIL")
@RequestMapping(value = "/api/open/email", name = "이메일 관련")
@RequiredArgsConstructor
@CrossOrigin
public class OpenTestController {

    private final ResponseService responseService;
    private final MailService mailService;

    //TODO[ojh] 2020/09/01 : 계정생성 메일 발송 후 삭제 예정
    @ApiOperation(value = "계정생성 이메일 발송")
    @GetMapping(name = "계정생성 이메일 발송", value = "/start")
    public SingleResult<Boolean> sendEmail1 () {
        log.info("OpenTestController.sendEmail1");

        String[] emails = {
                "jihoon.oh@emotion.co.kr",
                "sojeong.lee@emotion.co.kr",
                "YunTaeho@emotion.co.kr",
                "joohee.jeong@emotion.co.kr",
                "jaeeun.jung@emotion.co.kr",
                "sangki.kim@emotion.co.kr",
                "suji.lee@emotion.co.kr",
                "sungmin.kim@emotion.co.kr",
                "joosung.yeum@emotion.co.kr",
                "jungmin.lee@emotion.co.kr",
                "seonae.jig@emotion.co.kr"
        };

        String[] names = {
                "[Emotion] 오지훈",
                "[Emotion] 이소정",
                "[Emotion] 윤태호",
                "[Emotion] 정주희",
                "[Emotion] 정재은",
                "[Emotion] 김상기",
                "[Emotion] 이수지",
                "[Emotion] 김성민",
                "[Emotion] 염주성",
                "[Emotion] 이정민",
                "[Emotion] 지은유"
        };

        for (int i=0; i<emails.length; i++) {
            final SendDTO sendDTO = new SendDTO();
            sendDTO.setNickname(names[i]);
            sendDTO.setEmail(emails[i]);
            sendDTO.setLoginUrl("https://www.nikespace.co.kr/login");
            mailService.sendMail(
                    ServiceCode.EmailTypeEnumCode.USER_CREATE.toString()
                    , ServiceCode.EmailTypeEnumCode.USER_CREATE.getMessage()
                    , sendDTO
            );
        }
        return responseService.getSingleResult(true);
    }

    //TODO[ojh] 2020/09/01 : 계정생성 메일 발송 후 삭제 예정
    @ApiOperation(value = "계정생성 이메일 발송")
    @GetMapping(name = "계정생성 이메일 발송", value = "first")
    public SingleResult<Boolean> sendEmail2 () {
        log.info("OpenTestController.sendEmail2");

        final SendDTO sendDTO1 = new SendDTO();
        sendDTO1.setNickname("NIKE ADMIN 1");
        sendDTO1.setEmail("Eunji.Lee@nike.com");
        sendDTO1.setLoginUrl("https://www.nikespace.co.kr/login");
        mailService.sendMail(
                ServiceCode.EmailTypeEnumCode.USER_CREATE.toString()
                , ServiceCode.EmailTypeEnumCode.USER_CREATE.getMessage()
                , sendDTO1
        );

        final SendDTO sendDTO2 = new SendDTO();
        sendDTO2.setNickname("NIKE MKT 14");
        sendDTO2.setEmail("Jaesic.Chung@nike.com");
        sendDTO2.setLoginUrl("https://www.nikespace.co.kr/login");
        mailService.sendMail(
                ServiceCode.EmailTypeEnumCode.USER_CREATE.toString()
                , ServiceCode.EmailTypeEnumCode.USER_CREATE.getMessage()
                , sendDTO2
        );

        return responseService.getSingleResult(true);
    }

    //TODO[ojh] 2020/09/01 : 계정생성 메일 발송 후 삭제 예정
    @ApiOperation(value = "계정생성 이메일 발송")
    @GetMapping(name = "계정생성 이메일 발송", value = "/second")
    public SingleResult<Boolean> sendEmail3 () {
        log.info("OpenTestController.sendEmail3");

        String[] emails = {
                "nikespace06@nikespace.co.kr",
                "Brant.Hirst@nike.com",
                "Sooyeon.Choi@nike.com",
                "Gabe.Folick@nike.com",
                "SangA.Kim@nike.com",
                "JiYeonJane.Lee@nike.com",
                "Jaewon.Ha@nike.com",
                "Abigail.Seo@nike.com",
                "Jiny.Chang@nike.com",
                "MinJung.Kim@nike.com",
                "BaekYeob.Park@nike.com",
                "Jinny.Lee@nike.com",
                "Sora.Lee@nike.com",
                "Jiwon.Han@nike.com",
                "YunSook.Je@nike.com",
                "DongGi.Kim@nike.com",
                "YongHun.Hong@nike.com",
                "Jiyoon.Park@nike.com",
                "HyeMin.Kim@nike.com",
                "Hyejin.Seo@nike.com",
                "YaeLim.Song@nike.com",
                "GoEun.Park@nike.com",
                "GoYo.Choi@nike.com",
                "Miae.Kim@nike.com",
                "SooHyeon.Kim@nike.com",
                "SeungMin.Kang@nike.com",
                "Kyungseo.Shim@nike.com",
                "Yeonsim.Jeong@nike.com",
                "Tinyman@naver.com",
                "mcube_nike@m-cube.co.kr",
                "chansuk.hong@fcompany.kr",
                "Jinwook.Lee@oglivy.com",
                "bnroh@3ibank.com",
                "nike@choibros.co.kr",
                "displaydesa@naver.com",
                "jessie@erplus.co.kr",
                "f_nike@fcompany.kr",
                "t_t_r@naver.com",
                "SeongMin.Choi@nike.com",
                "Mijoo.Jeong@nike.com"
        };

        String[] names = {
                "Internal03",
                "NIKE MKT 1",
                "NIKE MKT 2",
                "NIKE MKT 3",
                "NIKE MKT 4",
                "NIKE MKT 5",
                "NIKE MKT 6",
                "NIKE MKT 7",
                "NIKE MKT 8",
                "NIKE MKT 9",
                "NIKE MKT 10",
                "NIKE MKT 11",
                "NIKE MKT 12",
                "NIKE MKT 13",
                "NIKE MKT 15",
                "NIKE MKT 16",
                "NIKE MKT 17",
                "NIKE MKT 18",
                "NIKE MKT 19",
                "NIKE MKT 20",
                "NIKE MKT 21",
                "NIKE MKT 22",
                "NIKE MKT 23",
                "NIKE MKT 24",
                "NIKE MKT 25",
                "NIKE MKT 26",
                "NIKE MKT 27",
                "NIKE MKT 28",
                "RB AGENCY 1",
                "RB AGENCY 2",
                "RB AGENCY 3",
                "RB AGENCY 4",
                "RB AGENCY 5",
                "VMS AGENCY 1",
                "VMS AGENCY 2",
                "EKIN AGENCY 1",
                "SUPPLY AGENCY 3",
                "SUPPLY AGENCY 4",
                "NIKE TECH 1",
                "Nike Legal"
        };

        for (int i=0; i<emails.length; i++) {
            final SendDTO sendDTO = new SendDTO();
            sendDTO.setNickname(names[i]);
            sendDTO.setEmail(emails[i]);
            sendDTO.setLoginUrl("https://www.nikespace.co.kr/login");
            mailService.sendMail(
                    ServiceCode.EmailTypeEnumCode.USER_CREATE.toString()
                    , ServiceCode.EmailTypeEnumCode.USER_CREATE.getMessage()
                    , sendDTO
            );
        }
        return responseService.getSingleResult(true);
    }


}
