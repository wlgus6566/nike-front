<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="JavaDocConfiguration">
    <GENERAL>
      <MODE>UPDATE</MODE>
      <OVERRIDDEN_METHODS>true</OVERRIDDEN_METHODS>
      <SPLITTED_CLASS_NAME>true</SPLITTED_CLASS_NAME>
      <LEVELS>
        <LEVEL>TYPE</LEVEL>
        <LEVEL>METHOD</LEVEL>
        <LEVEL>FIELD</LEVEL>
      </LEVELS>
      <VISIBILITIES>
        <VISIBILITY>PUBLIC</VISIBILITY>
        <VISIBILITY>PROTECTED</VISIBILITY>
        <VISIBILITY>DEFAULT</VISIBILITY>
        <VISIBILITY>PRIVATE</VISIBILITY>
      </VISIBILITIES>
    </GENERAL>
    <TEMPLATES>
      <CLASSES>
        <CLASS>
          <KEY>^.*(public|protected|private)*.+interface\s+\w+.*</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * The Interface ${name}.\n
&lt;#if element.typeParameters?has_content&gt;        * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
        * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
 */</VALUE>
        </CLASS>
        <CLASS>
          <KEY>^.*(public|protected|private)*.+enum\s+\w+.*</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * The enum ${name}.\n
 */</VALUE>
        </CLASS>
        <CLASS>
          <KEY>^.*(public|protected|private)*.+class\s+\w+.*</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * The Class ${name}.\n

* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n

&lt;#if element.typeParameters?has_content&gt;        * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
        * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
 */</VALUE>
        </CLASS>
        <CLASS>
          <KEY>.+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * The type ${name}.\n
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
 */</VALUE>
        </CLASS>
      </CLASSES>
      <CONSTRUCTORS>
        <CONSTRUCTOR>
          <KEY>.+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * Instantiates a new ${name}.\n
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
        </CONSTRUCTOR>
      </CONSTRUCTORS>
      <METHODS>
        <METHOD>
          <KEY>^.*(public|protected|private)*\s*.*(\w(\s*&lt;.+&gt;)*)+\s+get\w+\s*\(.*\).+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * Gets ${partName}.\n
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if isNotVoid&gt;
         *\n
         * @return the ${partName}\n
&lt;/#if&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
        </METHOD>
        <METHOD>
          <KEY>^.*(public|protected|private)*\s*.*(void|\w(\s*&lt;.+&gt;)*)+\s+set\w+\s*\(.*\).+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * Sets ${partName}.\n
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if isNotVoid&gt;
         *\n
         * @return the ${partName}\n
&lt;/#if&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
        </METHOD>
        <METHOD>
          <KEY>^.*((public\s+static)|(static\s+public))\s+void\s+main\s*\(\s*String\s*(\[\s*\]|\.\.\.)\s+\w+\s*\).+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * The entry point of application.\n
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
     &lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
     * @param ${element.parameterList.parameters[0].name} the input arguments\n
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
        </METHOD>
        <METHOD>
          <KEY>.+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * ${name}&lt;#if isNotVoid&gt; ${return}&lt;/#if&gt;.\n
* @author [${user}]\n
* @since ${nowDateTile}\n
* @implNote\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if isNotVoid&gt;
         *\n
         * @return the ${return}\n
&lt;/#if&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
        </METHOD>
      </METHODS>
      <FIELDS>
        <FIELD>
          <KEY>^.*(public|protected|private)*.+static.*(\w\s\w)+.+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
 * The constant ${element.getName()}\n
 * @author [${user}]\n
 */</VALUE>
        </FIELD>
        <FIELD>
          <KEY>^.*(public|protected|private)*.*(\w\s\w)+.+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
    &lt;#if element.parent.isInterface()&gt;
        * The constant ${element.getName()}\n
&lt;#else&gt;
        * The ${name}\n
&lt;/#if&gt;
              * @author [${user}]\n
              */</VALUE>
        </FIELD>
        <FIELD>
          <KEY>.+</KEY>
          <VALUE>
              &lt;#assign user=&quot;오지훈&quot;&gt;
              &lt;#assign nowDateTile=.now&gt;
              /**\n
    &lt;#if element.parent.isEnum()&gt;
        * ${name} ${typeName}\n
&lt;#else&gt;
        * The ${name}\n
&lt;/#if&gt;
              * @author [${user}]\n
              */</VALUE>
        </FIELD>
      </FIELDS>
    </TEMPLATES>
  </component>
</project>